extends Node2D

# Set this constant before the game starts
const in_edit_mode: bool = false
var current_level_name = GameState.current_level_name

const init_y_pos = -360
const pass_y = 509
@export var fall_speed: float = 434.5

# Time it takes for falling key to reach critical spot
var fk_fall_time: float
var fk_output_arr = [[], [], [], []]

var level_info = {
	"DUCKAGEDDON" = {
		"fk_times": "[[-0.4413605928421, 1.16081643104553, 2.92553281784058, 3.22739219665527, 5.21269845962524, 5.52616786956787, 5.79319715499878, 6.12988662719727, 6.42013645172119, 6.72199535369873, 7.07029438018799, 8.28934288024902, 9.58965969085693, 10.9480276107788, 12.7475738525391, 13.0842628479004, 15.3830394744873, 15.7313385009766, 18.0301132202148, 18.3668022155762, 20.7004089355469, 21.0603179931641, 22.6857147216797, 24.032470703125, 28.6880722045898, 29.047981262207, 29.3614521026611, 29.6981410980225, 34.3537406921387, 34.6556015014648, 35.015510559082, 38.0108833312988, 38.3359642028809, 38.6726531982422, 39.0441741943359, 42.0279350280762, 42.3414077758789, 42.6664848327637, 43.003173828125, 61.9854888916016, 66.664306640625], [0.51065754890442, 8.92789077758789, 9.93795871734619, 16.7297954559326, 17.0664844512939, 21.3621768951416, 21.7104759216309, 23.0340137481689, 24.369161605835, 31.3583679199219, 31.6950569152832, 32.0433578491211, 32.3568267822266, 39.322811126709, 39.647891998291, 39.9961891174316, 40.332878112793, 44.6517906188965, 45.3019485473633, 45.9985504150391, 46.6138763427734, 47.3336944580078, 47.9954643249512, 48.6572341918945], [-0.10467123985291, 0.81251692771912, 1.50911569595337, 1.86902499198914, 2.24054431915283, 2.58884334564209, 7.34893417358398, 7.65079402923584, 7.96426296234131, 9.22975063323975, 10.6113376617432, 11.3427667617798, 11.691065788269, 12.0625848770142, 12.3992748260498, 13.4093427658081, 13.7460317611694, 14.6980495452881, 15.0463485717773, 16.0331974029541, 16.4047164916992, 17.4031753540039, 17.7050342559814, 18.6686630249023, 19.0285720825195, 20.0270290374756, 20.3869380950928, 22.3490257263184, 23.6957817077637, 27.3645343780518, 27.7128353118896, 28.049524307251, 28.3746032714844, 30.0696601867676, 30.3483009338379, 30.6849899291992, 31.0216789245605, 32.6586837768555, 33.0302047729492, 33.355281829834, 33.680362701416, 33.9938316345215, 34.3421325683594, 34.6556015014648, 35.015510559082, 35.3638076782227, 35.7121086120605, 35.9907493591309, 36.3390464782715, 40.6695709228516, 40.9946479797363, 41.3313369750977, 41.6796379089355, 43.328254699707, 43.6533317565918, 44.0016326904297, 44.338321685791, 44.9884796142578, 45.673469543457, 46.3236274719238, 46.9853973388672, 47.6471672058105, 48.3437652587891, 51.4320182800293, 51.6526069641113, 51.9892959594727, 52.3143768310547, 52.6742858886719, 52.8368263244629, 53.0922431945801, 53.3708839416504, 53.6727447509766, 54.0210418701172, 54.3112907409668, 54.6479835510254, 54.9846725463867, 55.1820411682129, 55.321361541748, 55.6348304748535, 55.9715194702148, 56.2966003417969, 56.6448974609375, 56.9815864562988, 57.2950553894043, 57.6201362609863, 57.9452171325684, 58.2819061279297, 58.618595123291, 58.9552841186523, 59.2803611755371, 59.4777336120605, 59.6402702331543, 59.791202545166, 59.953742980957, 60.1511116027832, 60.3484802246094, 60.638729095459, 60.963809967041, 61.2888870239258, 61.6487998962402, 66.664306640625], [0.19718813896179, 3.57569169998169, 3.91238117218018, 4.30712032318115, 4.59736967086792, 4.92244911193848, 8.61442184448242, 10.251428604126, 14.0711116790771, 14.3961906433105, 19.3304309844971, 19.6555099487305, 22.0355548858643, 23.3474826812744, 24.7174606323242, 25.0425395965576, 25.3908386230469, 25.7043075561523, 26.0526084899902, 26.3892974853516, 26.7259864807129, 27.0742855072021, 36.652515411377, 37.0008163452148, 37.3375053405762, 37.6509742736816]]",
		"music": load("res://assets/music/bruhduck.mp3")
	}
}

func _ready():
	fk_fall_time = (pass_y - init_y_pos) / fall_speed
	
	$DuckMoosic.stream = level_info.get(current_level_name).get("music")
	$DuckMoosic.play()
	
	if in_edit_mode:
		Signals.KeyListenerPress.connect(KeyListenerPress)
	else:
		var fk_times = level_info.get(current_level_name).get("fk_times")
		var fk_times_arr = str_to_var(fk_times)
		
		var counter: int = 0
		for key in fk_times_arr:
			
			var button_name: String = ""
			match counter:
				0:
					button_name = "ui_left"
				1:
					button_name = "ui_down"
				2:
					button_name = "ui_up"
				3:
					button_name = "ui_right"
			
			for delay in key:
				SpawnFallingKey(button_name, delay)
			
			counter += 1

func KeyListenerPress(button_name: String, array_num: int):
	print(str(array_num) + " " + str($DuckMoosic.get_playback_position()))
	fk_output_arr[array_num].append($DuckMoosic.get_playback_position() - fk_fall_time)

func SpawnFallingKey(button_name: String, delay: float):
	await get_tree().create_timer(delay).timeout
	Signals.CreateFallingKey.emit(button_name)

func _on_duck_moosic_finished() -> void:
	print(fk_output_arr)
	GameState.final_score = %Score.score
	GameState.max_combo = %Score.combo_count
	$ScreenFader.fade_in(1.0)
	await get_tree().create_timer(1.0).timeout
	get_tree().change_scene_to_file("res://scenes/ScoreScreen.tscn")
